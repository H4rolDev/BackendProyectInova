// <auto-generated />
using System;
using InnovaSystemData.Sources.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InnovaSystem.Migrations
{
    [DbContext(typeof(InnovaDbContext))]
    [Migration("20241109014829_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InnovaSystemData.Sources.DataBase.Tables.CargoTable", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("salarioBase")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.HasKey("id");

                    b.ToTable("Cargo");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Estado = true,
                            descripcion = "Encargado de la empresa.",
                            nombre = "Gerente",
                            salarioBase = 4000m
                        },
                        new
                        {
                            id = 2,
                            Estado = true,
                            descripcion = "Vende en tienda.",
                            nombre = "Vendedor",
                            salarioBase = 2000m
                        },
                        new
                        {
                            id = 3,
                            Estado = true,
                            descripcion = "Tecnico en computacion.",
                            nombre = "Servicio Tecnico",
                            salarioBase = 2000m
                        });
                });

            modelBuilder.Entity("InnovaSystemData.Sources.DataBase.Tables.CategoriaTable", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("categorias");

                    b.HasData(
                        new
                        {
                            id = 1,
                            descripcion = "Todo tipo de computadoras, desde portátiles hasta de escritorio.",
                            estado = true,
                            nombre = "Computadoras"
                        },
                        new
                        {
                            id = 2,
                            descripcion = "Accesorios y dispositivos periféricos para computadoras.",
                            estado = true,
                            nombre = "Periféricos"
                        },
                        new
                        {
                            id = 3,
                            descripcion = "Componentes internos como tarjetas madre, procesadores, etc.",
                            estado = true,
                            nombre = "Componentes"
                        });
                });

            modelBuilder.Entity("InnovaSystemData.Sources.DataBase.Tables.ClienteDireccionTable", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("departamento")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("distrito")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("provincia")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("referencia")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("id");

                    b.ToTable("clienteDireccion");

                    b.HasData(
                        new
                        {
                            id = 1,
                            departamento = "Lima",
                            direccion = "Av. José Larco 123",
                            distrito = "Miraflores",
                            estado = true,
                            provincia = "Lima",
                            referencia = "Frente al parque central"
                        },
                        new
                        {
                            id = 2,
                            departamento = "Arequipa",
                            direccion = "Jr. Tacna 456",
                            distrito = "Arequipa",
                            estado = true,
                            provincia = "Arequipa",
                            referencia = "Cerca a la plaza de armas"
                        },
                        new
                        {
                            id = 3,
                            departamento = "Cusco",
                            direccion = "Av. Los Incas 789",
                            distrito = "Cusco",
                            estado = true,
                            provincia = "Cusco",
                            referencia = "Cerca del colegio nacional"
                        });
                });

            modelBuilder.Entity("InnovaSystemData.Sources.DataBase.Tables.ClienteTable", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NumeroDocumento")
                        .HasColumnType("int");

                    b.Property<string>("RSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<int>("id_Direccion")
                        .HasColumnType("int");

                    b.Property<int>("id_Persona")
                        .HasColumnType("int");

                    b.Property<int>("telefono")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id_Direccion")
                        .IsUnique();

                    b.HasIndex("id_Persona")
                        .IsUnique();

                    b.ToTable("clientes");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Apellidos = "Perez",
                            Nombres = "Juan",
                            NumeroDocumento = 12345678,
                            RSocial = "Cliente 1",
                            TipoDocumento = "DNI",
                            correo = "juan.cliente@example.com",
                            estado = true,
                            id_Direccion = 1,
                            id_Persona = 1,
                            telefono = 123456789
                        },
                        new
                        {
                            id = 2,
                            Apellidos = "Gomez",
                            Nombres = "Maria",
                            NumeroDocumento = 87654321,
                            TipoDocumento = "DNI",
                            correo = "maria.cliente@example.com",
                            estado = true,
                            id_Direccion = 2,
                            id_Persona = 2,
                            telefono = 987654321
                        });
                });

            modelBuilder.Entity("InnovaSystemData.Sources.DataBase.Tables.DeliveryTable", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("DNI")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<int>("id_direccion")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id_direccion")
                        .IsUnique();

                    b.ToTable("delivery");
                });

            modelBuilder.Entity("InnovaSystemData.Sources.DataBase.Tables.DetalleVentaTable", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<int>("id_producto")
                        .HasColumnType("int");

                    b.Property<int>("id_venta")
                        .HasColumnType("int");

                    b.Property<decimal>("impuestos")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.Property<decimal>("precioUnitario")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.HasKey("id");

                    b.HasIndex("id_producto");

                    b.HasIndex("id_venta")
                        .IsUnique();

                    b.ToTable("detalleVenta");
                });

            modelBuilder.Entity("InnovaSystemData.Sources.DataBase.Tables.MarcaTable", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("marca");

                    b.HasData(
                        new
                        {
                            id = 1,
                            descripcion = "Líder en computadoras portátiles y de escritorio.",
                            estado = true,
                            nombre = "HP"
                        },
                        new
                        {
                            id = 2,
                            descripcion = "Famosa por sus periféricos como teclados y mouses.",
                            estado = true,
                            nombre = "Logitech"
                        },
                        new
                        {
                            id = 3,
                            descripcion = "Reconocida por sus laptops y soluciones empresariales.",
                            estado = true,
                            nombre = "Dell"
                        },
                        new
                        {
                            id = 4,
                            descripcion = "Conocida por sus computadoras y componentes de alto rendimiento.",
                            estado = true,
                            nombre = "Asus"
                        },
                        new
                        {
                            id = 5,
                            descripcion = "Fabricante de computadoras y tecnología innovadora.",
                            estado = true,
                            nombre = "Acer"
                        },
                        new
                        {
                            id = 6,
                            descripcion = "Marca premium en periféricos para gamers.",
                            estado = true,
                            nombre = "Razer"
                        },
                        new
                        {
                            id = 7,
                            descripcion = "Conocida por sus productos de software y hardware, incluyendo teclados.",
                            estado = true,
                            nombre = "Microsoft"
                        },
                        new
                        {
                            id = 8,
                            descripcion = "Reconocida por su tecnología innovadora y productos de alta gama.",
                            estado = true,
                            nombre = "Apple"
                        });
                });

            modelBuilder.Entity("InnovaSystemData.Sources.DataBase.Tables.OrdenServicioTecnicoTable", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("descripcionServicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("horaFin")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("horaInicio")
                        .HasColumnType("time");

                    b.Property<int>("id_Trabajador")
                        .HasColumnType("int");

                    b.Property<int>("id_cliente")
                        .HasColumnType("int");

                    b.Property<decimal>("precioUnitario")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.Property<decimal>("total")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.HasKey("id");

                    b.HasIndex("id_Trabajador");

                    b.HasIndex("id_cliente");

                    b.ToTable("ordenServicioTecnico");
                });

            modelBuilder.Entity("InnovaSystemData.Sources.DataBase.Tables.PersonaTable", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numero_documento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo_documento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("persona");

                    b.HasData(
                        new
                        {
                            id = 1,
                            apellidos = "Pérez",
                            estado = true,
                            nombres = "Juan",
                            numero_documento = "12345678",
                            tipo_documento = "DNI"
                        },
                        new
                        {
                            id = 2,
                            apellidos = "González",
                            estado = true,
                            nombres = "María",
                            numero_documento = "87654321",
                            tipo_documento = "DNI"
                        });
                });

            modelBuilder.Entity("InnovaSystemData.Sources.DataBase.Tables.ProductoTable", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<int>("garantia")
                        .HasColumnType("int");

                    b.Property<int>("id_categoria")
                        .HasColumnType("int");

                    b.Property<int>("id_marca")
                        .HasColumnType("int");

                    b.Property<string>("imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modelo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("precioVenta")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.Property<int>("utilidadPorcentaje")
                        .HasColumnType("int");

                    b.Property<decimal>("utilidadPrecioVenta")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.HasKey("id");

                    b.HasIndex("id_categoria");

                    b.HasIndex("id_marca");

                    b.ToTable("productos");

                    b.HasData(
                        new
                        {
                            id = 1,
                            descripcion = "Laptop HP Pavilion con procesador Intel Core i5 y 8GB de RAM.",
                            estado = true,
                            garantia = 12,
                            id_categoria = 1,
                            id_marca = 1,
                            imagen = "hp_pavilion_15.jpg",
                            modelo = "15-eh2021nr",
                            nombre = "HP Pavilion 15",
                            precioVenta = 3500.00m,
                            stock = 20,
                            utilidadPorcentaje = 14,
                            utilidadPrecioVenta = 500.00m
                        },
                        new
                        {
                            id = 2,
                            descripcion = "Laptop Dell XPS 13 con pantalla InfinityEdge y procesador Intel Core i7.",
                            estado = true,
                            garantia = 12,
                            id_categoria = 1,
                            id_marca = 3,
                            imagen = "dell_xps_13.jpg",
                            modelo = "XPS 13 9310",
                            nombre = "Dell XPS 13",
                            precioVenta = 4500.00m,
                            stock = 15,
                            utilidadPorcentaje = 13,
                            utilidadPrecioVenta = 600.00m
                        },
                        new
                        {
                            id = 3,
                            descripcion = "Mouse inalámbrico Logitech MX Master 3 con control preciso.",
                            estado = true,
                            garantia = 24,
                            id_categoria = 2,
                            id_marca = 2,
                            imagen = "logitech_mx_master_3.jpg",
                            modelo = "MX Master 3",
                            nombre = "Logitech MX Master 3",
                            precioVenta = 150.00m,
                            stock = 50,
                            utilidadPorcentaje = 13,
                            utilidadPrecioVenta = 20.00m
                        },
                        new
                        {
                            id = 4,
                            descripcion = "Teclado mecánico Razer BlackWidow V3 con retroiluminación RGB.",
                            estado = true,
                            garantia = 12,
                            id_categoria = 3,
                            id_marca = 6,
                            imagen = "razer_blackwidow_v3.jpg",
                            modelo = "BlackWidow V3",
                            nombre = "Razer BlackWidow V3",
                            precioVenta = 200.00m,
                            stock = 25,
                            utilidadPorcentaje = 15,
                            utilidadPrecioVenta = 30.00m
                        });
                });

            modelBuilder.Entity("InnovaSystemData.Sources.DataBase.Tables.RecojoAlmacenTable", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dni")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("recojoAlmacen");
                });

            modelBuilder.Entity("InnovaSystemData.Sources.DataBase.Tables.RolTable", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Rol");

                    b.HasData(
                        new
                        {
                            id = 1,
                            descripcion = "Acceso total a todas las funcionalidades.",
                            estado = true,
                            nombre = "Trabajador"
                        },
                        new
                        {
                            id = 2,
                            descripcion = "Acceso limitado a funcionalidades básicas.",
                            estado = true,
                            nombre = "Cliente"
                        });
                });

            modelBuilder.Entity("InnovaSystemData.Sources.DataBase.Tables.TipoPagoTable", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("tipoPago");
                });

            modelBuilder.Entity("InnovaSystemData.Sources.DataBase.Tables.TrabajadorTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApellidoMaterno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("CargoTableid")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaFinContrato")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicioContrato")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Persona")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PuestoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salario")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CargoTableid");

                    b.HasIndex("Id_Persona")
                        .IsUnique();

                    b.HasIndex("PuestoId");

                    b.ToTable("Trabajador");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApellidoMaterno = "Pérez",
                            ApellidoPaterno = "García",
                            Estado = true,
                            FechaFinContrato = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicioContrato = new DateTime(2022, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Id_Persona = 1,
                            Nombres = "Juan",
                            PuestoId = 1,
                            Salario = 4000.00m,
                            Telefono = "987654321"
                        });
                });

            modelBuilder.Entity("InnovaSystemData.Sources.DataBase.Tables.UsuarioTable", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<int>("id_Persona")
                        .HasColumnType("int");

                    b.Property<int>("id_rol")
                        .HasColumnType("int");

                    b.Property<string>("salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("id_Persona")
                        .IsUnique();

                    b.HasIndex("id_rol");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Correo = "juan.usuario@example.com",
                            clave = "123456",
                            estado = true,
                            id_Persona = 1,
                            id_rol = 1,
                            salt = "randomsalt1"
                        },
                        new
                        {
                            id = 2,
                            Correo = "maria.usuario@example.com",
                            clave = "123456",
                            estado = true,
                            id_Persona = 2,
                            id_rol = 2,
                            salt = "randomsalt2"
                        });
                });

            modelBuilder.Entity("InnovaSystemData.Sources.DataBase.Tables.VentaTable", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_cliente")
                        .HasColumnType("int");

                    b.Property<int>("id_delivery")
                        .HasColumnType("int");

                    b.Property<int>("id_recojoAlmacen")
                        .HasColumnType("int");

                    b.Property<int>("id_tipoPago")
                        .HasColumnType("int");

                    b.Property<int>("id_trabajador")
                        .HasColumnType("int");

                    b.Property<decimal>("totalVenta")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.HasKey("id");

                    b.HasIndex("id_cliente");

                    b.HasIndex("id_delivery")
                        .IsUnique();

                    b.HasIndex("id_recojoAlmacen");

                    b.HasIndex("id_tipoPago")
                        .IsUnique();

                    b.HasIndex("id_trabajador");

                    b.ToTable("ventas");
                });

            modelBuilder.Entity("InnovaSystemData.Sources.DataBase.Tables.ClienteTable", b =>
                {
                    b.HasOne("InnovaSystemData.Sources.DataBase.Tables.ClienteDireccionTable", null)
                        .WithOne()
                        .HasForeignKey("InnovaSystemData.Sources.DataBase.Tables.ClienteTable", "id_Direccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InnovaSystemData.Sources.DataBase.Tables.PersonaTable", null)
                        .WithOne()
                        .HasForeignKey("InnovaSystemData.Sources.DataBase.Tables.ClienteTable", "id_Persona")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InnovaSystemData.Sources.DataBase.Tables.DeliveryTable", b =>
                {
                    b.HasOne("InnovaSystemData.Sources.DataBase.Tables.ClienteDireccionTable", null)
                        .WithOne()
                        .HasForeignKey("InnovaSystemData.Sources.DataBase.Tables.DeliveryTable", "id_direccion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InnovaSystemData.Sources.DataBase.Tables.DetalleVentaTable", b =>
                {
                    b.HasOne("InnovaSystemData.Sources.DataBase.Tables.ProductoTable", null)
                        .WithMany()
                        .HasForeignKey("id_producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InnovaSystemData.Sources.DataBase.Tables.VentaTable", null)
                        .WithOne()
                        .HasForeignKey("InnovaSystemData.Sources.DataBase.Tables.DetalleVentaTable", "id_venta")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InnovaSystemData.Sources.DataBase.Tables.OrdenServicioTecnicoTable", b =>
                {
                    b.HasOne("InnovaSystemData.Sources.DataBase.Tables.TrabajadorTable", null)
                        .WithMany()
                        .HasForeignKey("id_Trabajador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InnovaSystemData.Sources.DataBase.Tables.ClienteTable", null)
                        .WithMany()
                        .HasForeignKey("id_cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InnovaSystemData.Sources.DataBase.Tables.ProductoTable", b =>
                {
                    b.HasOne("InnovaSystemData.Sources.DataBase.Tables.CategoriaTable", null)
                        .WithMany()
                        .HasForeignKey("id_categoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InnovaSystemData.Sources.DataBase.Tables.MarcaTable", null)
                        .WithMany()
                        .HasForeignKey("id_marca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InnovaSystemData.Sources.DataBase.Tables.TrabajadorTable", b =>
                {
                    b.HasOne("InnovaSystemData.Sources.DataBase.Tables.CargoTable", null)
                        .WithMany("Trabajadores")
                        .HasForeignKey("CargoTableid");

                    b.HasOne("InnovaSystemData.Sources.DataBase.Tables.PersonaTable", null)
                        .WithOne()
                        .HasForeignKey("InnovaSystemData.Sources.DataBase.Tables.TrabajadorTable", "Id_Persona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InnovaSystemData.Sources.DataBase.Tables.CargoTable", "Puesto")
                        .WithMany()
                        .HasForeignKey("PuestoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Puesto");
                });

            modelBuilder.Entity("InnovaSystemData.Sources.DataBase.Tables.UsuarioTable", b =>
                {
                    b.HasOne("InnovaSystemData.Sources.DataBase.Tables.PersonaTable", null)
                        .WithOne()
                        .HasForeignKey("InnovaSystemData.Sources.DataBase.Tables.UsuarioTable", "id_Persona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InnovaSystemData.Sources.DataBase.Tables.RolTable", null)
                        .WithMany()
                        .HasForeignKey("id_rol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InnovaSystemData.Sources.DataBase.Tables.VentaTable", b =>
                {
                    b.HasOne("InnovaSystemData.Sources.DataBase.Tables.ClienteTable", null)
                        .WithMany()
                        .HasForeignKey("id_cliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InnovaSystemData.Sources.DataBase.Tables.DeliveryTable", null)
                        .WithOne()
                        .HasForeignKey("InnovaSystemData.Sources.DataBase.Tables.VentaTable", "id_delivery")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InnovaSystemData.Sources.DataBase.Tables.RecojoAlmacenTable", null)
                        .WithMany()
                        .HasForeignKey("id_recojoAlmacen")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InnovaSystemData.Sources.DataBase.Tables.TipoPagoTable", null)
                        .WithOne()
                        .HasForeignKey("InnovaSystemData.Sources.DataBase.Tables.VentaTable", "id_tipoPago")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InnovaSystemData.Sources.DataBase.Tables.TrabajadorTable", null)
                        .WithMany()
                        .HasForeignKey("id_trabajador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InnovaSystemData.Sources.DataBase.Tables.CargoTable", b =>
                {
                    b.Navigation("Trabajadores");
                });
#pragma warning restore 612, 618
        }
    }
}
